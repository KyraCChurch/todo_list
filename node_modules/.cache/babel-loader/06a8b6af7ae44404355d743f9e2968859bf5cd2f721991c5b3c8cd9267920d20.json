{"ast":null,"code":"var _jsxFileName = \"/Users/kyrachurch/software_homework/unit_3/todo/src/App.js\",\n  _s2 = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [todos, setTodos] = useState([]);\n  const [completedTodos, setCompletedTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState({\n    title: '',\n    completed: false\n  });\n\n  //createTodos\n  const createTodo = async () => {\n    const body = {\n      ...newTodo\n    };\n    try {\n      const response = await fetch('/api/todos', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      });\n      const createdTodo = await response.json();\n      const todosCopy = [createdTodo, ...todos];\n      setTodos(todosCopy);\n      setNewTodo({\n        title: '',\n        completed: false\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  //deleteTodos\n  //moveToCompleted\n  const moveToCompleted = async id => {\n    _s();\n    try {\n      const index = todos.findIndex(todo => todo._id === id);\n      const todosCopy = [...todos];\n      const subject = todosCopy[index];\n      subject.completed = true;\n      const response = await fetch('/api/todos/$(id)', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(subject)\n      });\n      const updatedTodo = await response.json();\n      const completedTDsCopy = [updatedTodo, ...completedTodos];\n      setCompletedTodos(completedTDsCopy);\n      todosCopy.splice(index, 1);\n      setTodos(todosCopy);\n    } catch (error) {\n      console.error(error);\n    }\n    //getTodos\n    const getTodos = async () => {\n      try {\n        const response = await fetch('/api/todos');\n        const foundTodos = await response.json();\n        setTodos(foundTodos.reverse());\n        const responseTwo = await fetch('/api/todos/completed');\n        const foundCompletedTodos = await responseTwo.json();\n        setCompletedTodos(foundCompletedTodos.reverse());\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    useEffect(() => {\n      getTodos();\n    }, []);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTodo.title,\n        onChange: e => {\n          setNewTodo({\n            ...newTodo,\n            title: e.target.value\n          });\n        },\n        onKeyDown: e => {\n          e.key === 'Enter' && createTodo();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Todos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), todos.map(todo => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [todo.title, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => moveToCompleted(todo._id),\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this)]\n        }, todo._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Completed Todos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }, this), completedTodos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: todo.title\n      }, todo._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 37\n      }, this))]\n    }, void 0, true);\n  };\n  _s(moveToCompleted, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n}\n_s2(App, \"j1mC/ejPLUxFefqjx9YURnR310Q=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","App","todos","setTodos","completedTodos","setCompletedTodos","newTodo","setNewTodo","title","completed","createTodo","body","response","fetch","method","headers","JSON","stringify","createdTodo","json","todosCopy","error","console","moveToCompleted","id","index","findIndex","todo","_id","subject","updatedTodo","completedTDsCopy","splice","getTodos","foundTodos","reverse","responseTwo","foundCompletedTodos","e","target","value","key","map"],"sources":["/Users/kyrachurch/software_homework/unit_3/todo/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react'\n\nexport default function App(){\n    const [todos, setTodos] = useState([])\n    const [completedTodos, setCompletedTodos] = useState([])\n    const [newTodo, setNewTodo] = useState({\n        title: '',\n        completed: false\n    })\n\n    //createTodos\n    const createTodo = async () => {\n        const body = {...newTodo}\n        try {\n            const response = await fetch('/api/todos', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(body)\n            })\n            const createdTodo = await response.json()\n            const todosCopy = [createdTodo,...todos]\n            setTodos(todosCopy)\n            setNewTodo({\n                title: '', \n                completed: false\n        })\n        } catch (error) {\n            console.error(error)\n        }\n    }\n    //deleteTodos\n    //moveToCompleted\n    const moveToCompleted = async (id) => {\n        try {\n            const index = todos.findIndex((todo) => todo._id === id)\n            const todosCopy = [...todos]\n            const subject = todosCopy[index]\n            subject.completed = true\n            const response = await fetch('/api/todos/$(id)', {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(subject)\n            })\n            const updatedTodo = await response.json()\n            const completedTDsCopy = [updatedTodo, ...completedTodos]\n            setCompletedTodos(completedTDsCopy)\n            todosCopy.splice(index, 1)\n            setTodos(todosCopy)\n    } catch (error) {\n            console.error(error)\n    }\n    //getTodos\n    const getTodos = async () => {\n        try{\n            const response = await fetch('/api/todos')\n            const foundTodos = await response.json()\n            setTodos(foundTodos.reverse())\n            const responseTwo = await fetch('/api/todos/completed')\n            const foundCompletedTodos = await responseTwo.json()\n            setCompletedTodos(foundCompletedTodos.reverse())\n        } catch(error){\n            console.error(error)\n        }\n    }\n    useEffect(() => {\n        getTodos()\n    }, [])\n\n    return(<>\n        <input type=\"text\" \n        value={newTodo.title} \n        onChange={(e) => {\n            setNewTodo({...newTodo, title: e.target.value})\n        }}\n        onKeyDown={(e) => {\n            e.key === 'Enter' && createTodo()\n        }}\n        />\n        <h3>Todos</h3>\n        {todos.map(todo => {\n            return(\n            <div key={todo._id}>{todo.title} \n                <button onClick={() => moveToCompleted(todo._id) }>Completed</button>\n            </div>\n        )})\n    }\n    <h3>Completed Todos</h3>\n        {completedTodos.map(todo => <div key={todo._id}>{todo.title}</div>)}\n    </>)\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}