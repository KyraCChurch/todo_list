{"ast":null,"code":"var _jsxFileName = \"/Users/kyrachurch/software_homework/unit_3/todo/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [comletedTodos, setCompletedTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState({\n    title: '',\n    completed: false\n  });\n\n  //createTodos\n  const createTodo = async () => {\n    const body = {\n      ...newTodo\n    };\n    try {\n      const response = await fetch('/api/todos', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      });\n      const createdTodo = await response.json();\n      const todosCopy = [createdTodo, ...todos];\n      setTodos(todosCopy);\n      setNewTodo({\n        title: '',\n        completed: false\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  //deleteTodos\n  //moveToCompleted\n  //getTodos\n  const getTodos = async () => {\n    try {\n      const response = await fetch('/api/todos');\n      const foundTools = await response.json();\n      setTodos(foundTodos);\n      const responseTwo = await fetch('/api/todos/complete');\n      const foundCompletedTodos = await responseTwo.json();\n      setCompletedTodos(foundCompletedTodos);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    getTodos();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newTodo.title,\n      onChange: e => {\n        setNewTodo({\n          ...newTodo,\n          title: e.target.value\n        });\n      },\n      onKeyDown: e => {\n        e.key === 'Enter' && createTodo();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: todo.title\n    }, todo._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 28\n    }, this)), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Completed Todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), completedTodos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: todo.title\n    }, todo._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 37\n    }, this))]\n  }, void 0, true);\n}\n_s(App, \"tOg9q/r1goL8EM94+lwEaa3tyaE=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","App","todos","setTodos","comletedTodos","setCompletedTodos","newTodo","setNewTodo","title","completed","createTodo","body","response","fetch","method","headers","JSON","stringify","createdTodo","json","todosCopy","error","console","getTodos","foundTools","foundTodos","responseTwo","foundCompletedTodos","e","target","value","key","map","todo","_id","completedTodos"],"sources":["/Users/kyrachurch/software_homework/unit_3/todo/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react'\n\nexport default function App(){\n    const [todos, setTodos] = useState([])\n    const [comletedTodos, setCompletedTodos] = useState([])\n    const [newTodo, setNewTodo] = useState({\n        title: '',\n        completed: false\n    })\n\n    //createTodos\n    const createTodo = async () => {\n        const body = {...newTodo}\n        try {\n            const response = await fetch('/api/todos', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(body)\n            })\n            const createdTodo = await response.json()\n            const todosCopy = [createdTodo,...todos]\n            setTodos(todosCopy)\n            setNewTodo({\n                title: '', \n                completed: false\n        })\n        } catch (error) {\n            console.error(error)\n        }\n    }\n    //deleteTodos\n    //moveToCompleted\n    //getTodos\n    const getTodos = async () => {\n        try{\n            const response = await fetch('/api/todos')\n            const foundTools = await response.json()\n            setTodos(foundTodos)\n            const responseTwo = await fetch('/api/todos/complete')\n            const foundCompletedTodos = await responseTwo.json()\n            setCompletedTodos(foundCompletedTodos)\n        } catch(error){\n            console.error(error)\n        }\n    }\n    useEffect(() => {\n        getTodos()\n    }, [])\n\n    return(<>\n        <input type=\"text\" \n        value={newTodo.title} \n        onChange={(e) => {\n            setNewTodo({...newTodo, title: e.target.value})\n        }}\n        onKeyDown={(e) => {\n            e.key === 'Enter' && createTodo()\n        }}\n        />\n        <h3>Todos</h3>\n        {todos.map(todo => <div key={todo._id}>{todo.title}</div>)}\n        <h3>Completed Todos</h3>\n        {completedTodos.map(todo => <div key={todo._id}>{todo.title}</div>)}\n    </>)\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}